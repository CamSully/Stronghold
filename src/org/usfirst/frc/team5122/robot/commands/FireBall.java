// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team5122.robot.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc.team5122.robot.OI;
import org.usfirst.frc.team5122.robot.Robot;
/**
 * FireBall is a component command that is used to either turn on the shooters for 0.5s or a specified time.
 * Note that this command never runs on its own, it is always used in conjunction with the pusher.
 */
public class  FireBall extends Command {
	
	// DEFAULT CONSTRUCTOR- TURN ON MOTORS FOR 0.5s
    public FireBall() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        requires(Robot.shooter);
        
        setTimeout(.5);
    }
    
    
    // SECONDARY CONSTRUCTOR- TURN ON MOTORS FOR SPECIFIED TIME.
    public FireBall(double timeout) {
    	
    	requires (Robot.shooter);
    	
    	setTimeout(timeout);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Robot.shooter.fire();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return isTimedOut();
    }

    // Called once after isFinished returns true
    protected void end() {
    	// If intake is not pressed, shut off motors (probably delete the 'if' statement later, not really needed).
    	if (!OI.jS1.get()) {
    		Robot.shooter.intakeOff();
    	}
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	// Don't do anything when interrupted because it causes motors to destroy themselves.
    }
    
}
