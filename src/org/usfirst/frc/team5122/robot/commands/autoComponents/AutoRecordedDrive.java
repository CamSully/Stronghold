// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team5122.robot.commands.autoComponents;

import edu.wpi.first.wpilibj.command.Command;

import java.util.ArrayList;

import org.usfirst.frc.team5122.robot.*;


/**
 *
 */
public class  AutoRecordedDrive extends Command {

	private ArrayList<Double> driveX = new ArrayList<Double>();
	private ArrayList<Double> driveY = new ArrayList<Double>();
	private ArrayList<Double> rotateY = new ArrayList<Double>();
	
    public AutoRecordedDrive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.drivetrain);
        requires(Robot.shooter);
        requires(Robot.lift);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double time = timeSinceInitialized() * 1000;
    	int realTime = (int)time;
    	
    	for (int i = 0; i < driveX.size(); i++) {
    		if (realTime % 10 == 0) {
    			Robot.drivetrain.AutoJSDrive(driveX.get(i), driveY.get(i));
    			Robot.shooter.Rotate(rotateY.get(i));
    		}
    	}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.drivetrain.stopDrivetrain();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
